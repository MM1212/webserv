# nginx type config file in yaml
servers:
  - # bind a socket (if it doesn't exist yet, create it) to a specific configuration
    # can be a sequence of addresses or just a scalar
    # can be of type <address>:<port> or <port> (in which case it will bind to 0.0.0.0)
    # presence: required
    # type: scalar<string> | sequence<scalar<string>>
    listen:
      - 0.0.0.0:80
      - 8080
    # the server name(s) for this configuration
    # every request that matches the listen address + port and the server name(s) will be handled by this configuration
    # can be a sequence of names or just a scalar
    # presence: required
    # type: scalar<string> | sequence<scalar<string>>
    server_names:
      - localhost
      - localhost.localdomain
    # if it is the default server or not
    # if no default is present, the first server will be the default
    # presence: optional
    # type: scalar<boolean>
    # default: false
    default: true
    # settings map
    # presence: required
    # type: mapping
    settings:
      # static information about the server
      # if present, the server will serve static files
      # this is an alias for route / static block
      # presence: optional
      # type: mapping
      static:
        # index file to serve for a directory
        # presence: optional
        # type: scalar<string>
        # default: index.html
        index: index.html
      # error pages for the server
      # will be served if an status code matches and there's nothing written to the response body
      # can be overriden by the route
      # presence: optional
      # type: mapping
      error_pages:
        404: /404.html
        500: /500.html
      # maximum body size for the server in bytes
      # can be overriden by the route
      # presence: optional
      # type: scalar<string>
      # default: 1024
      max_body_size: 1024
      # maximum number of connections for the server
      # presence: optional
      # type: scalar<integer>
      # default: 1024
      max_connections: 1024
    # dynamic information about the server
    # describes how to handle dynamic requests
    # presence: optional
    # type: sequence<mapping>
    routes:
      - # URI to override
        # presence: required
        # type: scalar<string>
        uri: /api
        # settings map
        # presence: optional
        # type: mapping
        settings:
          # Allowed methods for this route
          # presence: optional
          # type: sequence<scalar<string>>
          # allowed values: GET, POST, PUT, DELETE, HEAD
          # default: GET
          methods: [GET, POST]
          # maximum body size for the server in bytes
          # can be overriden by the route
          # presence: optional
          # type: scalar<string>
          # default: 1024
          max_body_size: 100
        # modules sequence
        # their order is important
        # they are handled like middlewares,
        # if one doesn't want to handle the request,
        # it can tell the route to execute the next one
        # presence: required
        # type: sequence<mapping>
        modules:
          # module struct
          ## type: the type of module
          ##  allowed values: cgi, static, redirect
          ##   - cgi: execute a cgi script
          ##   - static: serve static files
          ##   - redirect: redirect to another URI
          ## settings: the settings for the module
          ## presence: required
          - # type of the module
            # presence: required
            # type: scalar<string>
            type: cgi
            # settings map
            # presence: required
            # type: mapping
            settings:
              # root directory for the module
              # presence: required
              # type: scalar<string>
              root: /home/mm
              # interpreters sequence
              # presence: required
              # type: sequence<mapping>
              interpreters:
                - # name of the interpreter
                  # presence: required
                  # type: scalar<string>
                  name: python
                  # path to the interpreter
                  # presence: required
                  # type: scalar<string>
                  path: /usr/bin/python3
                  # extensions for the interpreter
                  # presence: required
                  # type: sequence<scalar<string>>
                  extensions: [.py]
            # what to do if the module doesn't match
            # presence: optional
            # type: scalar<string>
            # allowed values: next, status_code, break(404)
            # default: next
            no_match: next
          - # type of the module
            # presence: required
            # type: scalar<string>
            type: static
            # settings map
            # presence: required
            # type: mapping
            settings:
              # root directory for the module
              # presence: required
              # type: scalar<string>
              root: /home/mm
              # if directory listing is allowed
              # presence: optional
              # type: scalar<boolean>
              # default: false
              directory_listing: true
              # index file to serve for a directory
              # has precedence over directory listing
              # even if it is enabled
              # presence: optional
              # type: scalar<string>
              # default: index.html
              index: index.html
            # what to do if the module doesn't match
            # presence: optional
            # type: scalar<string>
            # allowed values: next, status_code, break(404)
            # default: next
            no_match: next
          - # type of the module
            # presence: required
            # type: scalar<string>
            type: redirect
            # settings map
            # presence: required
            # type: mapping
            settings:
              # the URI to redirect to
              # presence: required
              # type: scalar<string>
              uri: /api/v1
              # the type of redirect
              # presence: optional
              # type: scalar<string>
              # allowed values: permanent, temporary
              # default: permanent
              type: temporary
              # is a partial redirect
              # ex: /api/v1/users -> /api/v1/v1/users
              # presence: optional
              # type: scalar<boolean>
              # default: false
              partial: true
            # what to do if the module doesn't match
            # presence: optional
            # type: scalar<string>
            # allowed values: next, status_code, break(404)
            # default: next
            no_match: next